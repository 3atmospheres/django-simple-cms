# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-01-20 10:11
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import positions.fields
import simple_cms.models
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('updated_at', django_extensions.db.fields.ModificationDateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True, verbose_name='published')),
                ('title', models.CharField(max_length=255)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='title')),
                ('post_date', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, help_text='Display Date')),
                ('text', models.TextField(blank=True, default='')),
                ('format', models.CharField(blank=True, choices=[('html', 'html'), ('markdown', 'markdown'), ('textile', 'textile'), ('restructuredtext', 'restructuredtext')], default='', max_length=255)),
                ('render_as_template', models.BooleanField(default=False)),
                ('excerpt', models.TextField(blank=True, default='')),
                ('key_image', models.ImageField(blank=True, default='', upload_to='uploads/blog/')),
                ('display_image', models.BooleanField(default=True, help_text='Display image on post detail?')),
                ('allow_comments', models.BooleanField(default=True)),
                ('sticky', models.BooleanField(default=False)),
                ('url', models.CharField(blank=True, default='', help_text='eg. link somewhere else http://awesome.com/ or /awesome/page/', max_length=255)),
                ('target', models.CharField(blank=True, choices=[('_blank', '_blank'), ('_self', '_self'), ('_top', '_top'), ('_parent', '_parent')], default='', help_text='eg. open link in "_blank" window', max_length=255)),
                ('display_title', models.BooleanField(default=True, help_text='Display title on list view?')),
                ('publish_start', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, help_text='Show active content starting at this time.')),
                ('publish_end', models.DateTimeField(blank=True, help_text='Stop publishing active content at the time.', null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-post_date'],
            },
            bases=(simple_cms.models.TextMixin, simple_cms.models.UrlMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('updated_at', django_extensions.db.fields.ModificationDateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True, verbose_name='published')),
                ('key', models.CharField(help_text='Internal name to refer to this item', max_length=255, unique=True)),
                ('title', models.CharField(blank=True, help_text='Optional header on sidebar', max_length=255)),
                ('text', models.TextField(blank=True, default='')),
                ('format', models.CharField(blank=True, choices=[('html', 'html'), ('markdown', 'markdown'), ('textile', 'textile'), ('restructuredtext', 'restructuredtext')], default='', max_length=255)),
                ('render_as_template', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, default='', help_text='Optional image', upload_to='uploads/contentblocks/')),
                ('url', models.CharField(blank=True, default='', help_text='eg. link image / title somewhere http://awesome.com/ or /awesome/page/', max_length=255)),
                ('target', models.CharField(blank=True, choices=[('_blank', '_blank'), ('_self', '_self'), ('_top', '_top'), ('_parent', '_parent')], default='', help_text='eg. open image / title link in "_blank" window', max_length=255)),
                ('bypass_layout', models.BooleanField(default=False, help_text='Render only text field content, no surrounding markup.')),
                ('object_id', models.PositiveIntegerField(blank=True, help_text='Type in the ID of the item you want to choose. You should see the title appear beside the box.', null=True)),
                ('content_type', models.ForeignKey(blank=True, help_text='Choose an existing item type.<br>The most common choices will be Expert, etc.', null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'ordering': ('-updated_at', '-created_at'),
                'abstract': False,
                'get_latest_by': 'updated_at',
            },
            bases=(simple_cms.models.TextMixin, simple_cms.models.UrlMixin, models.Model),
        ),
        migrations.CreateModel(
            name='BlockGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('updated_at', django_extensions.db.fields.ModificationDateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True, verbose_name='published')),
                ('title', models.CharField(max_length=255)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='title')),
                ('order', positions.fields.PositionField(default=-1)),
                ('description', models.TextField(blank=True, default='')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='simple_cms.Category')),
            ],
            options={
                'ordering': ['title'],
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Navigation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('updated_at', django_extensions.db.fields.ModificationDateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True, verbose_name='published')),
                ('title', models.CharField(help_text='Navigation and default page title', max_length=255)),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='title')),
                ('order', positions.fields.PositionField(default=-1)),
                ('homepage', models.BooleanField(default=False)),
                ('dropdown', models.BooleanField(default=False, help_text='Display dropdown menu')),
                ('dropdown_title', models.CharField(blank=True, help_text='Title to display in the dropdown menu', max_length=255, null=True)),
                ('url', models.CharField(blank=True, default='', help_text='eg. link somewhere else http://awesome.com/ or /awesome/page/', max_length=255)),
                ('target', models.CharField(blank=True, choices=[('_blank', '_blank'), ('_self', '_self'), ('_top', '_top'), ('_parent', '_parent')], default='', help_text='eg. open link in "_blank" window', max_length=255)),
                ('page_title', models.CharField(blank=True, default='', help_text='Optional html title', max_length=255)),
                ('text', models.TextField(blank=True, default='')),
                ('format', models.CharField(blank=True, choices=[('html', 'html'), ('markdown', 'markdown'), ('textile', 'textile'), ('restructuredtext', 'restructuredtext')], default='', max_length=255)),
                ('render_as_template', models.BooleanField(default=False)),
                ('template', models.CharField(blank=True, default='', help_text='Eg. common/awesome.html', max_length=255)),
                ('view', models.CharField(blank=True, default='', help_text='Eg. common.views.awesome', max_length=255)),
                ('redirect_url', models.CharField(blank=True, default='', max_length=255)),
                ('redirect_permanent', models.BooleanField(default=False)),
                ('inherit_blocks', models.BooleanField(default=True, verbose_name='Inherit Blocks')),
                ('inherit_template', models.BooleanField(default=False, verbose_name='Inherit Template')),
            ],
            options={
                'ordering': ['title'],
                'verbose_name_plural': 'Navigation',
            },
            bases=(simple_cms.models.TextMixin, models.Model),
        ),
        migrations.CreateModel(
            name='NavigationGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ('title',),
            },
        ),
        migrations.CreateModel(
            name='RelatedBlock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True)),
                ('updated_at', django_extensions.db.fields.ModificationDateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True, verbose_name='published')),
                ('object_id', models.PositiveIntegerField()),
                ('order', positions.fields.PositionField(default=-1)),
                ('block', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='simple_cms.Block')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='simple_cms.BlockGroup')),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Seo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', help_text='Complete html title replacement', max_length=255)),
                ('description', models.TextField(blank=True, default='')),
                ('keywords', models.TextField(blank=True, default='')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name_plural': 'Seo',
            },
        ),
        migrations.AddField(
            model_name='navigation',
            name='group',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='simple_cms.NavigationGroup'),
        ),
        migrations.AddField(
            model_name='navigation',
            name='parent',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='simple_cms.Navigation'),
        ),
        migrations.AddField(
            model_name='navigation',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages', to='sites.Site'),
        ),
        migrations.AddField(
            model_name='article',
            name='categories',
            field=models.ManyToManyField(blank=True, related_name='articles', to='simple_cms.Category'),
        ),
        migrations.AddField(
            model_name='article',
            name='tags',
            field=taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
        migrations.AlterUniqueTogether(
            name='seo',
            unique_together=set([('content_type', 'object_id')]),
        ),
        migrations.AlterUniqueTogether(
            name='navigation',
            unique_together=set([('site', 'slug', 'parent')]),
        ),
    ]
